# -*- coding: utf-8 -*-
"""Copy of Artificial Neural Network

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1sxam2bF3DxZK4VdoZKCwNtaok5Avcw1w

# Artificial Neural Network

### Importing the libraries
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
import tensorflow as tf

tf.__version__

"""# New Section

## Part 1 - Data Preprocessing

### Importing the dataset
"""

dataset=pd.read_excel("Folds5x2_pp.xlsx")
X=dataset.iloc[ : , :-1].values
Y=dataset.iloc[ : , -1].values

print(X)

print(Y)

"""### Splitting the dataset into the Training set and Test set"""

from sklearn.model_selection import train_test_split
X_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=0.20,random_state=0)

print(X_train)

print(Y_train)

print(X_test)

print(Y_test)

"""## Part 2 - Building the ANN

### Initializing the ANN
"""

ann=tf.keras.models.Sequential()

"""### Adding the input layer and the first hidden layer"""

ann.add(tf.keras.layers.Dense(units=6,activation='relu'))

"""### Adding the second hidden layer"""

ann.add(tf.keras.layers.Dense(units=6,activation='relu'))

"""### Adding the output layer"""

ann.add(tf.keras.layers.Dense(units=1))

"""## Part 3 - Training the ANN

### Compiling the ANN
"""

ann.compile(optimizer='adam',loss='mean_squared_error')

"""### Training the ANN model on the Training set"""

ann.fit(X_train,Y_train,batch_size=32,epochs=100)

"""### Predicting the results of the Test set"""

Y_pred=ann.predict(X_test)
np.set_printoptions(precision=2)
print(np.concatenate((Y_pred.reshape(len(Y_pred),1),Y_test.reshape(len(Y_test),1)),1))

from sklearn.metrics import r2_score
print(r2_score(Y_test,Y_pred))

from sklearn.metrics import mean_squared_error
print(mean_squared_error(Y_test,Y_pred))

s=0
from math import pow
for i in range(len(Y_test)):
  s=s+pow((Y_pred[i]-Y_test[i]),2)
print(s/len(Y_test))